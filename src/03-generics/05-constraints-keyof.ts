// Напоминание что происходит в 5-й строке:
// U extends keyof T - сократи набор возможных значений до следующей сущности,
// обратись через keyof к тому объекту, который получишь на вход, и возьми его ключи,
// создай Юнион из ключей объекта и сохрани его в переменную
export function prop<T, U extends keyof T>(key: U, obj: T): T[U] {
    // prop<T>(key: keyof T, obj: T): T[keyof T] // Сокращенная запись без второго параметра U
    return obj[key];
}

interface Laptop {
    brand: string,
}
type F = Laptop["brand"]

const obj1 = {a: 1, b: 2, c: 3} // Тот самый Юнион из трех литералов, созданный динамически при работе функции в начале урока
prop('a', obj1)
// prop('d', obj1) // ошибка, т.к. литерала d нет в obj1